{"version":3,"sources":["../src/Stack.js"],"names":["Stack","capacity","stack","size","prototype","push","val","isFull","console","log","pop","isEmpty","x","print","forEach","peek","module","exports"],"mappings":";;AACC,SAASA,KAAT,CAAeC,QAAf,EACD;AACE,OAAKC,KAAL,GAAa,EAAb,CADF,CACmB;AACjB,OAAKC,IAAL,GAAY,CAAC,CAAb,CAFF,CAEmB;AACjB,OAAKF,QAAL,GAAgBA,QAAhB;AAED;;AAEDD,MAAMI,SAAN,CAAgBC,IAAhB,GAAuB,UAASC,GAAT,EACvB;AACE,MAAG,KAAKC,MAAL,EAAH,EACA;AACEC,YAAQC,GAAR,CAAY,uBAAZ;AACD,GAHD,MAIK;AACH,SAAKN,IAAL,GAAY,KAAKA,IAAL,GAAU,CAAtB;AACA,SAAKD,KAAL,CAAW,KAAKC,IAAhB,IAAsBG,GAAtB;AACD;AACF,CAVD;;AAYAN,MAAMI,SAAN,CAAgBM,GAAhB,GAAsB,YACtB;AACE,MAAG,KAAKC,OAAL,EAAH,EACA;AACEH,YAAQC,GAAR,CAAY,wBAAZ;AACD,GAHD,MAII;AACF,QAAIG,IAAI,KAAKV,KAAL,CAAW,KAAKC,IAAhB,CAAR;AACA,WAAO,KAAKD,KAAL,CAAW,KAAKC,IAAhB,CAAP;AACA,SAAKA,IAAL,GAAY,KAAKA,IAAL,GAAU,CAAtB;AACA,WAAOS,CAAP;AACD;AACF,CAZD;;AAcAZ,MAAMI,SAAN,CAAgBS,KAAhB,GAAwB,YACxB;AACE,OAAKX,KAAL,CAAWY,OAAX,CAAmB,UAASF,CAAT,EACrB;AAACJ,YAAQC,GAAR,CAAYG,CAAZ;AAAe,GADd;AAGD,CALD;;AAOAZ,MAAMI,SAAN,CAAgBW,IAAhB,GAAuB,YACvB;AACE,MAAG,KAAKJ,OAAL,EAAH,EACA;AACEH,YAAQC,GAAR,CAAY,gBAAZ;AACA,WAAO,IAAP;AACD,GAJD,MAMA;AACE,QAAIG,IAAI,KAAKV,KAAL,CAAW,KAAKC,IAAhB,CAAR;AACA,WAAOS,CAAP;AACD;AACF,CAZD;;AAcAZ,MAAMI,SAAN,CAAgBO,OAAhB,GAA0B,YAAW;AACrC;AACE,SAAO,KAAKR,IAAL,KAAc,CAAC,CAAf,GAAmB,IAAnB,GAA0B,KAAjC;AACD,CAHD;;AAKAH,MAAMI,SAAN,CAAgBG,MAAhB,GAAyB,YAAW;AACpC;AACE,SAAO,KAAKJ,IAAL,KAAc,KAAKF,QAAL,GAAc,CAA5B,GAAgC,IAAhC,GAAuC,KAA9C;AACD,CAHD;;AAKAe,OAAOC,OAAP,GAAiB,EAACjB,OAAMA,KAAP,EAAjB","file":"Stack.js","sourcesContent":["\r\n function Stack(capacity)\r\n{\r\n  this.stack = []; // to store my data\r\n  this.size = -1 ; // initializing empty stack\r\n  this.capacity = capacity;\r\n  \r\n}\r\n\r\nStack.prototype.push = function(val)\r\n{\r\n  if(this.isFull())\r\n  {\r\n    console.log(\"stack is already full\");\r\n  }\r\n  else {\r\n    this.size = this.size+1;\r\n    this.stack[this.size]=val;\r\n  }\r\n}\r\n\r\nStack.prototype.pop = function()\r\n{\r\n  if(this.isEmpty())\r\n  {\r\n    console.log(\"stack is already empty\");\r\n  }\r\n  else{\r\n    var x = this.stack[this.size];\r\n    delete this.stack[this.size];\r\n    this.size = this.size-1;\r\n    return x;\r\n  }\r\n}\r\n\r\nStack.prototype.print = function()\r\n{\r\n  this.stack.forEach(function(x)\r\n{console.log(x)});\r\n\r\n}\r\n\r\nStack.prototype.peek = function()\r\n{\r\n  if(this.isEmpty())\r\n  {\r\n    console.log(\"stack is empty\");\r\n    return null;\r\n  }\r\n  else\r\n  {\r\n    var x = this.stack[this.size]\r\n    return x;\r\n  }\r\n}\r\n\r\nStack.prototype.isEmpty = function() // checks underflow\r\n{\r\n  return this.size === -1 ? true : false;\r\n}\r\n\r\nStack.prototype.isFull = function() // checks overflow\r\n{\r\n  return this.size === this.capacity-1 ? true : false;\r\n}\r\n\r\nmodule.exports = {Stack:Stack}"]}